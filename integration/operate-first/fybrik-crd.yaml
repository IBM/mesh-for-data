---
# Source: fybrik-crd/templates/app.fybrik.io_blueprints.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: blueprints.app.fybrik.io
spec:
  group: app.fybrik.io
  names:
    kind: Blueprint
    listKind: BlueprintList
    plural: blueprints
    singular: blueprint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.observedState.ready
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Blueprint is the Schema for the blueprints API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BlueprintSpec defines the desired state of Blueprint, which
              defines the components of the workload's data path that run in a particular
              cluster. In a single cluster environment there is one blueprint per
              workload (FybrikApplication). In a multi-cluster environment there is
              one Blueprint per cluster per workload (FybrikApplication).
            properties:
              cluster:
                description: Cluster indicates the cluster on which the Blueprint
                  runs
                type: string
              modules:
                additionalProperties:
                  description: BlueprintModule is a copy of a FybrikModule Custom
                    Resource.  It contains the information necessary to instantiate
                    a datapath component, including the parameters relevant for the
                    particular workload.
                  properties:
                    arguments:
                      description: Arguments are the input parameters for a specific
                        instance of a module.
                      properties:
                        appSelector:
                          description: Application selector is used to identify the
                            user workload. It is obtained from FybrikApplication spec.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        copy:
                          description: CopyArgs are parameters specific to modules
                            that copy data from one data store to another.
                          properties:
                            assetID:
                              description: AssetID identifies the asset to be used
                                for accessing the data when it is ready It is copied
                                from the FybrikApplication resource
                              type: string
                            destination:
                              description: Destination is the data store to which
                                the data will be copied
                              properties:
                                connection:
                                  description: Connection has the relevant details
                                    for accesing the data (url, table, ssl, etc.)
                                  properties:
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                format:
                                  description: Format represents data format (e.g.
                                    parquet) as received from catalog connectors
                                  type: string
                                vault:
                                  additionalProperties:
                                    description: Holds details for retrieving credentials
                                      from Vault store.
                                    properties:
                                      address:
                                        description: Address is Vault address
                                        type: string
                                      authPath:
                                        description: AuthPath is the path to auth
                                          method i.e. kubernetes
                                        type: string
                                      role:
                                        description: Role is the Vault role used for
                                          retrieving the credentials
                                        type: string
                                      secretPath:
                                        description: SecretPath is the path of the
                                          secret holding the Credentials in Vault
                                        type: string
                                    required:
                                    - address
                                    - authPath
                                    - role
                                    - secretPath
                                    type: object
                                  description: Holds details for retrieving credentials
                                    by the modules from Vault store. It is a map so
                                    that different credentials can be stored for the
                                    different DataFlow operations.
                                  type: object
                              required:
                              - connection
                              - vault
                              type: object
                            source:
                              description: Source is the where the data currently
                                resides
                              properties:
                                connection:
                                  description: Connection has the relevant details
                                    for accesing the data (url, table, ssl, etc.)
                                  properties:
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                format:
                                  description: Format represents data format (e.g.
                                    parquet) as received from catalog connectors
                                  type: string
                                vault:
                                  additionalProperties:
                                    description: Holds details for retrieving credentials
                                      from Vault store.
                                    properties:
                                      address:
                                        description: Address is Vault address
                                        type: string
                                      authPath:
                                        description: AuthPath is the path to auth
                                          method i.e. kubernetes
                                        type: string
                                      role:
                                        description: Role is the Vault role used for
                                          retrieving the credentials
                                        type: string
                                      secretPath:
                                        description: SecretPath is the path of the
                                          secret holding the Credentials in Vault
                                        type: string
                                    required:
                                    - address
                                    - authPath
                                    - role
                                    - secretPath
                                    type: object
                                  description: Holds details for retrieving credentials
                                    by the modules from Vault store. It is a map so
                                    that different credentials can be stored for the
                                    different DataFlow operations.
                                  type: object
                              required:
                              - connection
                              - vault
                              type: object
                            transformations:
                              description: Transformations are different types of
                                processing that may be done to the data as it is copied.
                              items:
                                properties:
                                  name:
                                    type: string
                                required:
                                - name
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                          required:
                          - assetID
                          - destination
                          - source
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels of FybrikApplication
                          type: object
                        read:
                          description: ReadArgs are parameters that are specific to
                            modules that enable an application to read data
                          items:
                            description: ReadModuleArgs define the input parameters
                              for modules that read data from location A
                            properties:
                              assetID:
                                description: AssetID identifies the asset to be used
                                  for accessing the data when it is ready It is copied
                                  from the FybrikApplication resource
                                type: string
                              source:
                                description: Source of the read path module
                                properties:
                                  connection:
                                    description: Connection has the relevant details
                                      for accesing the data (url, table, ssl, etc.)
                                    properties:
                                      name:
                                        type: string
                                    required:
                                    - name
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  format:
                                    description: Format represents data format (e.g.
                                      parquet) as received from catalog connectors
                                    type: string
                                  vault:
                                    additionalProperties:
                                      description: Holds details for retrieving credentials
                                        from Vault store.
                                      properties:
                                        address:
                                          description: Address is Vault address
                                          type: string
                                        authPath:
                                          description: AuthPath is the path to auth
                                            method i.e. kubernetes
                                          type: string
                                        role:
                                          description: Role is the Vault role used
                                            for retrieving the credentials
                                          type: string
                                        secretPath:
                                          description: SecretPath is the path of the
                                            secret holding the Credentials in Vault
                                          type: string
                                      required:
                                      - address
                                      - authPath
                                      - role
                                      - secretPath
                                      type: object
                                    description: Holds details for retrieving credentials
                                      by the modules from Vault store. It is a map
                                      so that different credentials can be stored
                                      for the different DataFlow operations.
                                    type: object
                                required:
                                - connection
                                - vault
                                type: object
                              transformations:
                                description: Transformations are different types of
                                  processing that may be done to the data
                                items:
                                  properties:
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            required:
                            - assetID
                            - source
                            type: object
                          type: array
                        write:
                          description: WriteArgs are parameters that are specific
                            to modules that enable an application to write data
                          items:
                            description: WriteModuleArgs define the input parameters
                              for modules that write data to location B
                            properties:
                              assetID:
                                description: AssetID identifies the asset to be used
                                  for accessing the data when it is ready It is copied
                                  from the FybrikApplication resource
                                type: string
                              destination:
                                description: Destination is the data store to which
                                  the data will be written
                                properties:
                                  connection:
                                    description: Connection has the relevant details
                                      for accesing the data (url, table, ssl, etc.)
                                    properties:
                                      name:
                                        type: string
                                    required:
                                    - name
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  format:
                                    description: Format represents data format (e.g.
                                      parquet) as received from catalog connectors
                                    type: string
                                  vault:
                                    additionalProperties:
                                      description: Holds details for retrieving credentials
                                        from Vault store.
                                      properties:
                                        address:
                                          description: Address is Vault address
                                          type: string
                                        authPath:
                                          description: AuthPath is the path to auth
                                            method i.e. kubernetes
                                          type: string
                                        role:
                                          description: Role is the Vault role used
                                            for retrieving the credentials
                                          type: string
                                        secretPath:
                                          description: SecretPath is the path of the
                                            secret holding the Credentials in Vault
                                          type: string
                                      required:
                                      - address
                                      - authPath
                                      - role
                                      - secretPath
                                      type: object
                                    description: Holds details for retrieving credentials
                                      by the modules from Vault store. It is a map
                                      so that different credentials can be stored
                                      for the different DataFlow operations.
                                    type: object
                                required:
                                - connection
                                - vault
                                type: object
                              transformations:
                                description: Transformations are different types of
                                  processing that may be done to the data as it is
                                  written.
                                items:
                                  properties:
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                            required:
                            - assetID
                            - destination
                            type: object
                          type: array
                      type: object
                    assetIds:
                      description: assetIDs indicate the assets processed by this
                        module.  Included so we can track asset status as well as
                        module status in the future.
                      items:
                        type: string
                      type: array
                    chart:
                      description: Chart contains the location of the helm chart with
                        info detailing how to deploy
                      properties:
                        chartPullSecret:
                          description: Name of secret containing helm registry credentials
                          type: string
                        name:
                          description: Name of helm chart
                          type: string
                        values:
                          additionalProperties:
                            type: string
                          description: Values to pass to helm chart installation
                          type: object
                      required:
                      - name
                      type: object
                    name:
                      description: Name of the FybrikModule on which this is based
                      type: string
                  required:
                  - chart
                  - name
                  type: object
                description: Modules is a map which contains modules that indicate
                  the data path components that run in this cluster The map key is
                  moduleInstanceName which is the unique name for the deployed instance
                  related to this workload
                type: object
              modulesNamespace:
                description: ModulesNamespace is the namespace where modules should
                  be allocated
                type: string
            required:
            - cluster
            - modules
            - modulesNamespace
            type: object
          status:
            description: BlueprintStatus defines the observed state of Blueprint This
              includes readiness, error message, and indicators for the Kubernetes
              resources owned by the Blueprint for cleanup and status monitoring
            properties:
              modules:
                additionalProperties:
                  description: ObservedState represents a part of the generated Blueprint/Plotter
                    resource status that allows update of FybrikApplication status
                  properties:
                    error:
                      description: Error indicates that there has been an error to
                        orchestrate the modules and provides the error message
                      type: string
                    ready:
                      description: Ready represents that the modules have been orchestrated
                        successfully and the data is ready for usage
                      type: boolean
                  type: object
                description: ModulesState is a map which holds the status of each
                  module its key is the moduleInstanceName which is the unique name
                  for the deployed instance related to this workload
                type: object
              observedGeneration:
                description: ObservedGeneration is taken from the Blueprint metadata.  This
                  is used to determine during reconcile whether reconcile was called
                  because the desired state changed, or whether status of the allocated
                  resources should be checked.
                format: int64
                type: integer
              observedState:
                description: ObservedState includes information to be reported back
                  to the FybrikApplication resource It includes readiness and error
                  indications, as well as user instructions
                properties:
                  error:
                    description: Error indicates that there has been an error to orchestrate
                      the modules and provides the error message
                    type: string
                  ready:
                    description: Ready represents that the modules have been orchestrated
                      successfully and the data is ready for usage
                    type: boolean
                type: object
              releases:
                additionalProperties:
                  format: int64
                  type: integer
                description: Releases map each release to the observed generation
                  of the blueprint containing this release. At the end of reconcile,
                  each release should be mapped to the latest blueprint version or
                  be uninstalled.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: fybrik-crd/templates/app.fybrik.io_fybrikapplications.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: fybrikapplications.app.fybrik.io
spec:
  group: app.fybrik.io
  names:
    kind: FybrikApplication
    listKind: FybrikApplicationList
    plural: fybrikapplications
    singular: fybrikapplication
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FybrikApplication provides information about the application
          whose data is being operated on, the nature of the processing, and the data
          sets chosen for processing by the application. The FybrikApplication controller
          obtains instructions regarding any governance related changes that must
          be performed on the data, identifies the modules capable of performing such
          changes, and finally generates the Plotter which defines the secure runtime
          environment and all the components in it.  This runtime environment provides
          the application with access to the data requested in a secure manner and
          without having to provide any credentials for the data sets.  The credentials
          are obtained automatically by the manager from the credential management
          system.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FybrikApplicationSpec defines data flows needed by the application,
              the purpose and other contextual information about the application.
              Read flow - if selector is populated, fybrik builds a data plane for
              reading the specified data sets Ingest flow - if no selector, and data/copy/required
              is true then the data specified is copied into a bucket allocated by
              fybrik and is cataloged in the data catalog
            properties:
              appInfo:
                description: AppInfo contains information describing the reasons for
                  the processing that will be done by the application.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              data:
                description: Data contains the identifiers of the data to be used
                  by the Data Scientist's application, and the protocol used to access
                  it and the format expected.
                items:
                  description: DataContext indicates data set chosen by the Data Scientist
                    to be used by his application, and includes information about
                    the data format and technologies used by the application to access
                    the data.
                  properties:
                    catalogService:
                      description: CatalogService represents the catalog service for
                        accessing the requested dataset. If not specified, the enterprise
                        catalog service will be used.
                      type: string
                    dataSetID:
                      description: DataSetID is a unique identifier of the dataset
                        chosen from the data catalog for processing by the data user
                        application.
                      minLength: 1
                      type: string
                    requirements:
                      description: Requirements from the system
                      properties:
                        copy:
                          description: CopyRequrements include the requirements for
                            copying the data
                          properties:
                            catalog:
                              description: Catalog indicates that the data asset must
                                be cataloged.
                              properties:
                                catalogID:
                                  description: CatalogID specifies the catalog where
                                    the data will be cataloged.
                                  type: string
                                service:
                                  description: CatalogService specifies the datacatalog
                                    service that will be used for catalogging the
                                    data into.
                                  type: string
                              type: object
                            required:
                              description: Required indicates that the data must be
                                copied.
                              type: boolean
                          type: object
                        interface:
                          description: Interface indicates the protocol and format
                            expected by the data user
                          properties:
                            dataformat:
                              description: DataFormat defines the data format type
                              type: string
                            protocol:
                              description: Protocol defines the interface protocol
                                used for data transactions
                              type: string
                          required:
                          - protocol
                          type: object
                      required:
                      - interface
                      type: object
                  required:
                  - dataSetID
                  - requirements
                  type: object
                type: array
              secretRef:
                description: SecretRef points to the secret that holds credentials
                  for each system the user has been authenticated with. The secret
                  is deployed in FybrikApplication namespace.
                type: string
              selector:
                description: Selector enables to connect the resource to the application
                  Application labels should match the labels in the selector.
                properties:
                  clusterName:
                    description: Cluster name
                    type: string
                  workloadSelector:
                    description: WorkloadSelector enables to connect the resource
                      to the application Application labels should match the labels
                      in the selector.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                required:
                - workloadSelector
                type: object
            required:
            - appInfo
            - data
            type: object
          status:
            description: FybrikApplicationStatus defines the observed state of FybrikApplication.
            properties:
              assetStates:
                additionalProperties:
                  description: AssetState defines the observed state of an asset
                  properties:
                    catalogedAsset:
                      description: CatalogedAsset provides a new asset identifier
                        after being registered in the enterprise catalog
                      type: string
                    conditions:
                      description: Conditions indicate the asset state (Ready, Deny,
                        Error)
                      items:
                        description: Condition describes the state of a FybrikApplication
                          at a certain point.
                        properties:
                          message:
                            description: Message contains the details of the current
                              condition
                            type: string
                          observedGeneration:
                            description: ObservedGeneration is the version of the
                              resource for which the condition has been evaluated
                            format: int64
                            type: integer
                          status:
                            default: Unknown
                            description: Status of the condition, one of (`True`,
                              `False`, `Unknown`).
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: Type of the condition
                            type: string
                        required:
                        - type
                        type: object
                      type: array
                    endpoint:
                      description: Endpoint provides the endpoint spec from which
                        the asset will be served to the application
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                description: AssetStates provides a status per asset
                type: object
              errorMessage:
                description: ErrorMessage indicates that an error has happened during
                  the reconcile, unrelated to a specific asset
                type: string
              generated:
                description: Generated resource identifier
                properties:
                  appVersion:
                    description: Version of FybrikApplication that has generated this
                      resource
                    format: int64
                    type: integer
                  kind:
                    description: Kind of the resource (Blueprint, Plotter)
                    type: string
                  name:
                    description: Name of the resource
                    type: string
                  namespace:
                    description: Namespace of the resource
                    type: string
                required:
                - appVersion
                - kind
                - name
                - namespace
                type: object
              observedGeneration:
                description: ObservedGeneration is taken from the FybrikApplication
                  metadata.  This is used to determine during reconcile whether reconcile
                  was called because the desired state changed, or whether the Blueprint
                  status changed.
                format: int64
                type: integer
              provisionedStorage:
                additionalProperties:
                  description: DatasetDetails holds details of the provisioned storage
                  properties:
                    datasetRef:
                      description: Reference to a Dataset resource containing the
                        request to provision storage
                      type: string
                    secretRef:
                      description: Reference to a secret where the credentials are
                        stored
                      type: string
                  type: object
                description: ProvisionedStorage maps a dataset (identified by AssetID)
                  to the new provisioned bucket. It allows FybrikApplication controller
                  to manage buckets in case the spec has been modified, an error has
                  occurred, or a delete event has been received. ProvisionedStorage
                  has the information required to register the dataset once the owned
                  plotter resource is ready
                type: object
              ready:
                description: Ready is true if all specified assets are either ready
                  to be used or are denied access.
                type: boolean
              validApplication:
                description: ValidApplication indicates whether the FybrikApplication
                  is valid given the defined taxonomy
                type: string
              validatedGeneration:
                description: ValidatedGeneration is the version of the FyrbikApplication
                  that has been validated with the taxonomy defined.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: fybrik-crd/templates/app.fybrik.io_fybrikmodules.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: fybrikmodules.app.fybrik.io
spec:
  group: app.fybrik.io
  names:
    kind: FybrikModule
    listKind: FybrikModuleList
    plural: fybrikmodules
    singular: fybrikmodule
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FybrikModule is a description of an injectable component. the
          parameters it requires, as well as the specification of how to instantiate
          such a component. It is used as metadata only.  There is no status nor reconciliation.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FybrikModuleSpec contains the info common to all modules,
              which are one of the components that process, load, write, audit, monitor
              the data used by the data scientist's application.
            properties:
              capabilities:
                description: Capabilities declares what this module knows how to do
                  and the types of data it knows how to handle The key to the map
                  is a CapabilityType string
                items:
                  description: Capability declares what this module knows how to do
                    and the types of data it knows how to handle
                  properties:
                    actions:
                      description: Actions are the data transformations that the module
                        supports
                      items:
                        properties:
                          name:
                            description: Unique name of an action supported by the
                              module
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    api:
                      description: API indicates to the application how to access
                        the capabilities provided by the module
                      properties:
                        connection:
                          description: Connection information
                          properties:
                            name:
                              type: string
                          required:
                          - name
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        dataFormat:
                          description: Data format
                          type: string
                      required:
                      - connection
                      type: object
                    capability:
                      description: 'Capability declares what this module knows how
                        to do - ex: read, write, transform...'
                      type: string
                    plugins:
                      description: Plugins enable the module to add libraries to perform
                        actions rather than implementing them by itself
                      items:
                        properties:
                          dataFormat:
                            description: DataFormat indicates the format of data the
                              plugin knows how to process
                            type: string
                          pluginType:
                            description: PluginType indicates the technology used
                              for the module and the plugin to interact The values
                              supported should come from the module taxonomy Examples
                              of such mechanisms are vault plugins, wasm, etc
                            type: string
                        required:
                        - dataFormat
                        - pluginType
                        type: object
                      type: array
                    scope:
                      description: 'Scope indicates at what level the capability is
                        used: workload, asset, cluster If not indicated it is assumed
                        to be asset'
                      enum:
                      - asset
                      - workload
                      - cluster
                      type: string
                    supportedInterfaces:
                      description: Copy should have one or more instances in the list,
                        and its content should have source and sink Read should have
                        one or more instances in the list, each with source populated
                        Write should have one or more instances in the list, each
                        with sink populated This field may not be required if not
                        handling data
                      items:
                        description: ModuleInOut specifies the protocol and format
                          of the data input and output by the module - if any
                        properties:
                          sink:
                            description: Sink specifies the output data protocol and
                              format
                            properties:
                              dataformat:
                                description: DataFormat defines the data format type
                                type: string
                              protocol:
                                description: Protocol defines the interface protocol
                                  used for data transactions
                                type: string
                            required:
                            - protocol
                            type: object
                          source:
                            description: Source specifies the input data protocol
                              and format
                            properties:
                              dataformat:
                                description: DataFormat defines the data format type
                                type: string
                              protocol:
                                description: Protocol defines the interface protocol
                                  used for data transactions
                                type: string
                            required:
                            - protocol
                            type: object
                        type: object
                      type: array
                  required:
                  - capability
                  type: object
                type: array
              chart:
                description: Reference to a Helm chart that allows deployment of the
                  resources required for this module
                properties:
                  chartPullSecret:
                    description: Name of secret containing helm registry credentials
                    type: string
                  name:
                    description: Name of helm chart
                    type: string
                  values:
                    additionalProperties:
                      type: string
                    description: Values to pass to helm chart installation
                    type: object
                required:
                - name
                type: object
              dependencies:
                description: Other components that must be installed in order for
                  this module to work
                items:
                  description: Dependency details another component on which this
                    module relies - i.e. a pre-requisit
                  properties:
                    name:
                      description: Name is the name of the dependent component
                      type: string
                    type:
                      description: Type provides information used in determining how
                        to instantiate the component
                      enum:
                      - module
                      - connector
                      - feature
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
              description:
                description: An explanation of what this module does
                type: string
              pluginType:
                description: 'Plugin type indicates the plugin technology used to
                  invoke the capabilities Ex: vault, fybrik-wasm... Should be provided
                  if type is plugin'
                type: string
              statusIndicators:
                description: StatusIndicators allow to check status of a non-standard
                  resource that can not be computed by helm/kstatus
                items:
                  description: ResourceStatusIndicator is used to determine the status
                    of an orchestrated resource
                  properties:
                    errorMessage:
                      description: ErrorMessage specifies the resource field to check
                        for an error, e.g. status.errorMsg
                      type: string
                    failureCondition:
                      description: FailureCondition specifies a condition that indicates
                        the resource failure It uses kubernetes label selection syntax
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
                      type: string
                    kind:
                      description: Kind provides information about the resource kind
                      type: string
                    successCondition:
                      description: SuccessCondition specifies a condition that indicates
                        that the resource is ready It uses kubernetes label selection
                        syntax (https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
                      type: string
                  required:
                  - kind
                  - successCondition
                  type: object
                type: array
              type:
                description: 'May be one of service, config or plugin Service: Means
                  that the control plane deploys the component that performs the capability
                  Config: Another pre-installed service performs the capability and
                  the module deployed configures it for the particular workload or
                  dataset Plugin: Indicates that this module performs a capability
                  as part of another service or module rather than as a stand-alone
                  module'
                type: string
            required:
            - capabilities
            - chart
            - type
            type: object
          status:
            description: FybrikModuleStatus defines the observed state of FybrikModule.
            properties:
              conditions:
                description: Conditions indicate the module states with respect to
                  validation
                items:
                  description: Condition describes the state of a FybrikApplication
                    at a certain point.
                  properties:
                    message:
                      description: Message contains the details of the current condition
                      type: string
                    observedGeneration:
                      description: ObservedGeneration is the version of the resource
                        for which the condition has been evaluated
                      format: int64
                      type: integer
                    status:
                      default: Unknown
                      description: Status of the condition, one of (`True`, `False`,
                        `Unknown`).
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of the condition
                      type: string
                  required:
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: fybrik-crd/templates/app.fybrik.io_fybrikstorageaccounts.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: fybrikstorageaccounts.app.fybrik.io
spec:
  group: app.fybrik.io
  names:
    kind: FybrikStorageAccount
    listKind: FybrikStorageAccountList
    plural: fybrikstorageaccounts
    singular: fybrikstorageaccount
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FybrikStorageAccount defines a storage account used for copying
          data. Only S3 based storage is supported. It contains endpoint, region and
          a reference to the credentials a Owner of the asset is responsible to store
          the credentials
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FybrikStorageAccountSpec defines the desired state of FybrikStorageAccount
            properties:
              endpoints:
                additionalProperties:
                  type: string
                description: Endpoints based on regions
                type: object
              id:
                description: Identification of a storage account
                type: string
              secretRef:
                description: A name of k8s secret deployed in the control plane. This
                  secret includes secretKey and accessKey credentials for S3 bucket
                type: string
            required:
            - endpoints
            - id
            - secretRef
            type: object
          status:
            description: FybrikStorageAccountStatus defines the observed state of
              FybrikStorageAccount
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: fybrik-crd/templates/app.fybrik.io_plotters.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: plotters.app.fybrik.io
spec:
  group: app.fybrik.io
  names:
    kind: Plotter
    listKind: PlotterList
    plural: plotters
    singular: plotter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.observedState.ready
      name: Ready
      type: string
    - jsonPath: .status.readyTimestamp
      name: ReadySince
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Plotter is the Schema for the plotters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PlotterSpec defines the desired state of Plotter, which is
              applied in a multi-clustered environment. Plotter declares what needs
              to be installed and where (as blueprints running on remote clusters)
              which provides the Data Scientist's application with secure and governed
              access to the data requested in the FybrikApplication.
            properties:
              appSelector:
                description: Selector enables to connect the resource to the application
                  Application labels should match the labels in the selector. For
                  some flows the selector may not be used.
                properties:
                  clusterName:
                    description: Cluster name
                    type: string
                  workloadSelector:
                    description: WorkloadSelector enables to connect the resource
                      to the application Application labels should match the labels
                      in the selector.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                required:
                - workloadSelector
                type: object
              assets:
                additionalProperties:
                  description: AssetDetails is a list of assets used in the fybrikapplication.
                    In addition to assets declared in fybrikapplication, AssetDetails
                    list also contains assets that are allocated by the control-plane
                    in order to serve fybrikapplication
                  properties:
                    advertisedAssetId:
                      description: AdvertisedAssetID links this asset to asset from
                        fybrikapplication and is used by user facing services
                      type: string
                    assetDetails:
                      description: DataStore contains the details for accesing the
                        data that are sent by catalog connectors Credentials for accesing
                        the data are stored in Vault, in the location represented
                        by Vault property.
                      properties:
                        connection:
                          description: Connection has the relevant details for accesing
                            the data (url, table, ssl, etc.)
                          properties:
                            name:
                              type: string
                          required:
                          - name
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        format:
                          description: Format represents data format (e.g. parquet)
                            as received from catalog connectors
                          type: string
                        vault:
                          additionalProperties:
                            description: Holds details for retrieving credentials
                              from Vault store.
                            properties:
                              address:
                                description: Address is Vault address
                                type: string
                              authPath:
                                description: AuthPath is the path to auth method i.e.
                                  kubernetes
                                type: string
                              role:
                                description: Role is the Vault role used for retrieving
                                  the credentials
                                type: string
                              secretPath:
                                description: SecretPath is the path of the secret
                                  holding the Credentials in Vault
                                type: string
                            required:
                            - address
                            - authPath
                            - role
                            - secretPath
                            type: object
                          description: Holds details for retrieving credentials by
                            the modules from Vault store. It is a map so that different
                            credentials can be stored for the different DataFlow operations.
                          type: object
                      required:
                      - connection
                      - vault
                      type: object
                  required:
                  - assetDetails
                  type: object
                description: Assets is a map holding information about the assets
                  The key is the assetID
                type: object
              flows:
                items:
                  description: 'Flows is the list of data flows driven from fybrikapplication:
                    Each element in the list holds the flow of the data requested
                    in fybrikapplication.'
                  properties:
                    assetId:
                      description: AssetID indicates the data set being used in this
                        data flow
                      type: string
                    flowType:
                      description: Type of the flow (e.g. read)
                      type: string
                    name:
                      description: Name of the flow
                      type: string
                    subFlows:
                      items:
                        description: Subflows is a list of data flows which are originated
                          from the same data asset but are triggered differently (e.g.,
                          one upon init trigger and one upon workload trigger)
                        properties:
                          flowType:
                            description: Type of the flow (e.g. read)
                            type: string
                          name:
                            description: Name of the SubFlow
                            type: string
                          steps:
                            description: Steps defines a series of sequential/parallel
                              data flow steps The first dimension represents parallel
                              data flows. The second sequential components within
                              the same parallel data flow.
                            items:
                              items:
                                description: DataFlowStep contains details on a single
                                  data flow step
                                properties:
                                  cluster:
                                    description: Name of the cluster this step is
                                      executed on
                                    type: string
                                  name:
                                    description: Name of the step
                                    type: string
                                  parameters:
                                    description: Step parameters TODO why not flatten
                                      the parameters into this data flow step
                                    properties:
                                      action:
                                        description: Actions are the data transformations
                                          that the module supports
                                        items:
                                          properties:
                                            name:
                                              type: string
                                          required:
                                          - name
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        type: array
                                      api:
                                        description: ResourceDetails includes asset
                                          connection details
                                        properties:
                                          connection:
                                            description: Connection information
                                            properties:
                                              name:
                                                type: string
                                            required:
                                            - name
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          dataFormat:
                                            description: Data format
                                            type: string
                                        required:
                                        - connection
                                        type: object
                                      sink:
                                        description: 'StepSink holds information to
                                          where the target data will be written: it
                                          could be assetID of an asset specified in
                                          fybrikapplication or of an asset created
                                          by fybrik control-plane'
                                        properties:
                                          assetId:
                                            description: AssetID identifies the target
                                              asset of this step
                                            type: string
                                        required:
                                        - assetId
                                        type: object
                                      source:
                                        description: 'StepSource is the source of
                                          this step: it could be assetID or an enpoint
                                          of another step'
                                        properties:
                                          api:
                                            description: API holds information for
                                              accessing a module instance
                                            properties:
                                              connection:
                                                description: Connection information
                                                properties:
                                                  name:
                                                    type: string
                                                required:
                                                - name
                                                type: object
                                                x-kubernetes-preserve-unknown-fields: true
                                              dataFormat:
                                                description: Data format
                                                type: string
                                            required:
                                            - connection
                                            type: object
                                          assetId:
                                            description: AssetID identifies the source
                                              asset of this step
                                            type: string
                                        type: object
                                    type: object
                                  template:
                                    description: Template is the name of the template
                                      to execute the step The full details of the
                                      template can be extracted from Plotter.spec.templates
                                      list field.
                                    type: string
                                required:
                                - cluster
                                - name
                                - template
                                type: object
                              type: array
                            type: array
                          triggers:
                            description: Triggers
                            items:
                              description: SubFlowTrigger indicates the trigger for
                                this subflow
                              enum:
                              - workload
                              - init
                              - timer
                              type: string
                            type: array
                        required:
                        - flowType
                        - name
                        - steps
                        - triggers
                        type: object
                      type: array
                  required:
                  - assetId
                  - flowType
                  - name
                  - subFlows
                  type: object
                type: array
              modulesNamespace:
                description: ModulesNamespace is the namespace where modules should
                  be allocated
                type: string
              templates:
                additionalProperties:
                  description: Template contains basic information about the required
                    modules to serve the fybrikapplication e.g., the module helm chart
                    name.
                  properties:
                    modules:
                      description: Modules is a list of dependent modules. e.g., if
                        a plugin module is used then the service module is used in
                        should appear first in the modules list of the same template.
                        If the modules list contains more than one module, the first
                        module in the list is referred to as the "primary module"
                        of which all the parameters to this template are sent to.
                      items:
                        description: ModuleInfo is a copy of FybrikModule Custom Resource.  It
                          contains information to instantiate resource of type FybrikModule.
                        properties:
                          chart:
                            description: Chart contains the information needed to
                              use helm to install the capability
                            properties:
                              chartPullSecret:
                                description: Name of secret containing helm registry
                                  credentials
                                type: string
                              name:
                                description: Name of helm chart
                                type: string
                              values:
                                additionalProperties:
                                  type: string
                                description: Values to pass to helm chart installation
                                type: object
                            required:
                            - name
                            type: object
                          name:
                            description: Name of the module
                            type: string
                          scope:
                            description: 'Scope indicates at what level the capability
                              is used: workload, asset, cluster If not indicated it
                              is assumed to be asset'
                            enum:
                            - asset
                            - workload
                            - cluster
                            type: string
                          type:
                            description: 'May be one of service, config or plugin
                              Service: Means that the control plane deploys the component
                              that performs the capability Config: Another pre-installed
                              service performs the capability and the module deployed
                              configures it for the particular workload or dataset
                              Plugin: Indicates that this module performs a capability
                              as part of another service or module rather than as
                              a stand-alone module'
                            type: string
                        required:
                        - chart
                        - name
                        - type
                        type: object
                      type: array
                    name:
                      description: Name of the template
                      type: string
                  required:
                  - modules
                  type: object
                description: Templates is a map holding the templates used in this
                  plotter steps The key is the template name
                type: object
            required:
            - assets
            - flows
            - modulesNamespace
            - templates
            type: object
          status:
            description: PlotterStatus defines the observed state of Plotter This
              includes readiness, error message, and indicators received from blueprint
              resources owned by the Plotter for cleanup and status monitoring
            properties:
              assets:
                additionalProperties:
                  description: ObservedState represents a part of the generated Blueprint/Plotter
                    resource status that allows update of FybrikApplication status
                  properties:
                    error:
                      description: Error indicates that there has been an error to
                        orchestrate the modules and provides the error message
                      type: string
                    ready:
                      description: Ready represents that the modules have been orchestrated
                        successfully and the data is ready for usage
                      type: boolean
                  type: object
                description: Assets is a map containing the status per asset. The
                  key of this map is assetId
                type: object
              blueprints:
                additionalProperties:
                  description: MetaBlueprint defines blueprint metadata (name, namespace)
                    and status
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                    status:
                      description: BlueprintStatus defines the observed state of Blueprint
                        This includes readiness, error message, and indicators for
                        the Kubernetes resources owned by the Blueprint for cleanup
                        and status monitoring
                      properties:
                        modules:
                          additionalProperties:
                            description: ObservedState represents a part of the generated
                              Blueprint/Plotter resource status that allows update
                              of FybrikApplication status
                            properties:
                              error:
                                description: Error indicates that there has been an
                                  error to orchestrate the modules and provides the
                                  error message
                                type: string
                              ready:
                                description: Ready represents that the modules have
                                  been orchestrated successfully and the data is ready
                                  for usage
                                type: boolean
                            type: object
                          description: ModulesState is a map which holds the status
                            of each module its key is the moduleInstanceName which
                            is the unique name for the deployed instance related to
                            this workload
                          type: object
                        observedGeneration:
                          description: ObservedGeneration is taken from the Blueprint
                            metadata.  This is used to determine during reconcile
                            whether reconcile was called because the desired state
                            changed, or whether status of the allocated resources
                            should be checked.
                          format: int64
                          type: integer
                        observedState:
                          description: ObservedState includes information to be reported
                            back to the FybrikApplication resource It includes readiness
                            and error indications, as well as user instructions
                          properties:
                            error:
                              description: Error indicates that there has been an
                                error to orchestrate the modules and provides the
                                error message
                              type: string
                            ready:
                              description: Ready represents that the modules have
                                been orchestrated successfully and the data is ready
                                for usage
                              type: boolean
                          type: object
                        releases:
                          additionalProperties:
                            format: int64
                            type: integer
                          description: Releases map each release to the observed generation
                            of the blueprint containing this release. At the end of
                            reconcile, each release should be mapped to the latest
                            blueprint version or be uninstalled.
                          type: object
                      type: object
                  required:
                  - name
                  - namespace
                  - status
                  type: object
                type: object
              conditions:
                description: Conditions represent the possible error and failure conditions
                items:
                  description: Condition describes the state of a FybrikApplication
                    at a certain point.
                  properties:
                    message:
                      description: Message contains the details of the current condition
                      type: string
                    observedGeneration:
                      description: ObservedGeneration is the version of the resource
                        for which the condition has been evaluated
                      format: int64
                      type: integer
                    status:
                      default: Unknown
                      description: Status of the condition, one of (`True`, `False`,
                        `Unknown`).
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of the condition
                      type: string
                  required:
                  - type
                  type: object
                type: array
              flows:
                additionalProperties:
                  description: FlowStatus includes information to be reported back
                    to the FybrikApplication resource It holds the status per data
                    flow
                  properties:
                    status:
                      description: ObservedState includes information about the current
                        flow It includes readiness and error indications, as well
                        as user instructions
                      properties:
                        error:
                          description: Error indicates that there has been an error
                            to orchestrate the modules and provides the error message
                          type: string
                        ready:
                          description: Ready represents that the modules have been
                            orchestrated successfully and the data is ready for usage
                          type: boolean
                      type: object
                    subFlows:
                      additionalProperties:
                        description: ObservedState represents a part of the generated
                          Blueprint/Plotter resource status that allows update of
                          FybrikApplication status
                        properties:
                          error:
                            description: Error indicates that there has been an error
                              to orchestrate the modules and provides the error message
                            type: string
                          ready:
                            description: Ready represents that the modules have been
                              orchestrated successfully and the data is ready for
                              usage
                            type: boolean
                        type: object
                      type: object
                  required:
                  - subFlows
                  type: object
                description: Flows is a map containing the status for each flow the
                  key is the flow name
                type: object
              observedGeneration:
                description: ObservedGeneration is taken from the Plotter metadata.  This
                  is used to determine during reconcile whether reconcile was called
                  because the desired state changed, or whether status of the allocated
                  blueprints should be checked.
                format: int64
                type: integer
              observedState:
                description: ObservedState includes information to be reported back
                  to the FybrikApplication resource It includes readiness and error
                  indications, as well as user instructions
                properties:
                  error:
                    description: Error indicates that there has been an error to orchestrate
                      the modules and provides the error message
                    type: string
                  ready:
                    description: Ready represents that the modules have been orchestrated
                      successfully and the data is ready for usage
                    type: boolean
                type: object
              readyTimestamp:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: fybrik-crd/templates/katalog.fybrik.io_assets.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: assets.katalog.fybrik.io
spec:
  group: katalog.fybrik.io
  names:
    kind: Asset
    listKind: AssetList
    plural: assets
    singular: asset
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Asset defines an asset in the catalog
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              details:
                description: Asset details
                properties:
                  connection:
                    description: Connection information
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  dataFormat:
                    description: Data format
                    type: string
                required:
                - connection
                type: object
              metadata:
                description: Asset metadata
                properties:
                  columns:
                    description: Columns associated with the asset
                    items:
                      description: ResourceColumn represents a column in a tabular
                        resource
                      properties:
                        name:
                          description: Name of the column
                          type: string
                        tags:
                          description: Tags associated with the column
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - name
                      type: object
                    type: array
                  geography:
                    description: Geography of the resource
                    type: string
                  name:
                    description: Name of the resource
                    type: string
                  owner:
                    description: Owner of the resource
                    type: string
                  tags:
                    description: Tags associated with the asset
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              secretRef:
                description: Reference to a Secret resource holding credentials for
                  this asset
                properties:
                  name:
                    description: Name of the Secret resource (must exist in the same
                      namespace)
                    type: string
                required:
                - name
                type: object
            required:
            - details
            - metadata
            - secretRef
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
