/*
Data Catalog Service - Asset Details

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package base

import (
	"encoding/json"
)

// DataCatalogResponse struct for DataCatalogResponse
type DataCatalogResponse struct {
	ResourceMetadata Resource `json:"resourceMetadata"`
	Details          Details  `json:"details"`
	// This has the vault plugin path where the data credentials will be stored as kubernetes secrets. This value is assumed to be known to the catalog connector.
	Credentials string `json:"credentials"`
}

// NewDataCatalogResponse instantiates a new DataCatalogResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataCatalogResponse(resourceMetadata Resource, details Details, credentials string) *DataCatalogResponse {
	this := DataCatalogResponse{}
	this.ResourceMetadata = resourceMetadata
	this.Details = details
	this.Credentials = credentials
	return &this
}

// NewDataCatalogResponseWithDefaults instantiates a new DataCatalogResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataCatalogResponseWithDefaults() *DataCatalogResponse {
	this := DataCatalogResponse{}
	return &this
}

// GetResourceMetadata returns the ResourceMetadata field value
func (o *DataCatalogResponse) GetResourceMetadata() Resource {
	if o == nil {
		var ret Resource
		return ret
	}

	return o.ResourceMetadata
}

// GetResourceMetadataOk returns a tuple with the ResourceMetadata field value
// and a boolean to check if the value has been set.
func (o *DataCatalogResponse) GetResourceMetadataOk() (*Resource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceMetadata, true
}

// SetResourceMetadata sets field value
func (o *DataCatalogResponse) SetResourceMetadata(v Resource) {
	o.ResourceMetadata = v
}

// GetDetails returns the Details field value
func (o *DataCatalogResponse) GetDetails() Details {
	if o == nil {
		var ret Details
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *DataCatalogResponse) GetDetailsOk() (*Details, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *DataCatalogResponse) SetDetails(v Details) {
	o.Details = v
}

// GetCredentials returns the Credentials field value
func (o *DataCatalogResponse) GetCredentials() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *DataCatalogResponse) GetCredentialsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Credentials, true
}

// SetCredentials sets field value
func (o *DataCatalogResponse) SetCredentials(v string) {
	o.Credentials = v
}

func (o DataCatalogResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resourceMetadata"] = o.ResourceMetadata
	}
	if true {
		toSerialize["details"] = o.Details
	}
	if true {
		toSerialize["credentials"] = o.Credentials
	}
	return json.Marshal(toSerialize)
}

type NullableDataCatalogResponse struct {
	value *DataCatalogResponse
	isSet bool
}

func (v NullableDataCatalogResponse) Get() *DataCatalogResponse {
	return v.value
}

func (v *NullableDataCatalogResponse) Set(val *DataCatalogResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDataCatalogResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDataCatalogResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataCatalogResponse(val *DataCatalogResponse) *NullableDataCatalogResponse {
	return &NullableDataCatalogResponse{value: val, isSet: true}
}

func (v NullableDataCatalogResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataCatalogResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
