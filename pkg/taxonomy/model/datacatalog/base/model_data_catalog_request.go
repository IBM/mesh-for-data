/*
Data Catalog Service - Asset Details

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package base

import (
	"encoding/json"
)

// DataCatalogRequest struct for DataCatalogRequest
type DataCatalogRequest struct {
	AssetID       string        `json:"assetID"`
	OperationType OperationType `json:"operationType"`
}

// NewDataCatalogRequest instantiates a new DataCatalogRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataCatalogRequest(assetID string, operationType OperationType) *DataCatalogRequest {
	this := DataCatalogRequest{}
	this.AssetID = assetID
	this.OperationType = operationType
	return &this
}

// NewDataCatalogRequestWithDefaults instantiates a new DataCatalogRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataCatalogRequestWithDefaults() *DataCatalogRequest {
	this := DataCatalogRequest{}
	return &this
}

// GetAssetID returns the AssetID field value
func (o *DataCatalogRequest) GetAssetID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetID
}

// GetAssetIDOk returns a tuple with the AssetID field value
// and a boolean to check if the value has been set.
func (o *DataCatalogRequest) GetAssetIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetID, true
}

// SetAssetID sets field value
func (o *DataCatalogRequest) SetAssetID(v string) {
	o.AssetID = v
}

// GetOperationType returns the OperationType field value
func (o *DataCatalogRequest) GetOperationType() OperationType {
	if o == nil {
		var ret OperationType
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *DataCatalogRequest) GetOperationTypeOk() (*OperationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *DataCatalogRequest) SetOperationType(v OperationType) {
	o.OperationType = v
}

func (o DataCatalogRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["assetID"] = o.AssetID
	}
	if true {
		toSerialize["operationType"] = o.OperationType
	}
	return json.Marshal(toSerialize)
}

type NullableDataCatalogRequest struct {
	value *DataCatalogRequest
	isSet bool
}

func (v NullableDataCatalogRequest) Get() *DataCatalogRequest {
	return v.value
}

func (v *NullableDataCatalogRequest) Set(val *DataCatalogRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDataCatalogRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDataCatalogRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataCatalogRequest(val *DataCatalogRequest) *NullableDataCatalogRequest {
	return &NullableDataCatalogRequest{value: val, isSet: true}
}

func (v NullableDataCatalogRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataCatalogRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
