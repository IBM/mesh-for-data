
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: m4dapplications.app.m4d.ibm.com
spec:
  group: app.m4d.ibm.com
  names:
    kind: M4DApplication
    listKind: M4DApplicationList
    plural: m4dapplications
    singular: m4dapplication
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: M4DApplication provides information about the application being used by a Data Scientist, the nature of the processing, and the data sets that the Data Scientist has chosen for processing by the application. The M4DApplication controller (aka pilot) obtains instructions regarding any governance related changes that must be performed on the data, identifies the modules capable of performing such changes, and finally generates the Blueprint which defines the secure runtime environment and all the components in it.  This runtime environment provides the Data Scientist's application with access to the data requested in a secure manner and without having to provide any credentials for the data sets.  The credentials are obtained automatically by the manager from an external credential management system, which may or may not be part of a data catalog.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: M4DApplicationSpec defines the desired state of M4DApplication.
          properties:
            appInfo:
              description: AppInfo contains information describing the reasons and geography of the processing that will be done by the Data Scientist's application.
              properties:
                processingGeography:
                  description: ProcessingGeography indicates the state or country or union in which the data processing will take place. This should be the same as the location of the cluster in which the manager is deployed. TO BE OBTAINED FROM THE ENVIRONMENT
                  type: string
                purpose:
                  description: Purpose indicates the reason for the processing and the use of the data by the Data Scientist's application.
                  type: string
                role:
                  description: Role indicates the position held or role filled by the Data Scientist as it relates to the processing of the data he has chosen. TO BE MOVED TO CREDENTIALS
                  type: string
              required:
              - role
              type: object
            data:
              description: 'Data contains the identifiers of the cataloged data to be read or written by the Data Scientist''s application, and the protocol used to access it and the format expected. Note: either Data or ExternalData must have at least one entry'
              items:
                description: DataContext indicates data set chosen by the Data Scientist to be read from or written to by his application, and includes information about the data format and technologies used by the application to access the data.
                properties:
                  dataSetID:
                    description: DataSetID is a unique identifier of the dataset chosen from the data catalog for processing by the data user application.
                    minLength: 1
                    type: string
                  ifDetails:
                    description: IFdetails indicates the protocol and format expected by the data by the Data Scientist's application
                    properties:
                      dataformat:
                        description: DataFormatType defines data format type
                        enum:
                        - parquet
                        - table
                        - csv
                        - json
                        - avro
                        - binary
                        - arrow
                        type: string
                      protocol:
                        description: IFProtocol defines interface protocol for data transactions
                        enum:
                        - s3
                        - kafka
                        - jdbc-db2
                        - m4d-arrow-flight
                        type: string
                    required:
                    - protocol
                    type: object
                  recurrence:
                    description: Recurrence indicates how often the copy should take place or if streamed input is needed Default is none
                    type: string
                required:
                - dataSetID
                - ifDetails
                type: object
              type: array
            externalData:
              description: ExternalData contains the information about data outside the managed environment that is not cataloged in the data catalog.
              items:
                description: ExternalDataContext provides the information for reading or writing data that is not cataloged in the data catalog. In this case the metadata has to be declared, rather than obtained from the data catalog.
                properties:
                  externalStore:
                    description: External data source not cataloged in the data catalog
                    properties:
                      connection:
                        description: Connection has the relevant details for accesing the data (url, table, ssl, etc.)
                        properties:
                          db2:
                            description: oneof location {   // should have been oneof but for technical rasons, a problem to translate it to JSON, we remove the oneof for now should have been local, db2, s3 without "location"  but had a problem to compile it in proto - collision with proto name DataLocationDb2
                            properties:
                              database:
                                type: string
                              port:
                                type: string
                              ssl:
                                type: string
                              table:
                                type: string
                              url:
                                type: string
                            type: object
                          kafka:
                            properties:
                              bootstrap_servers:
                                type: string
                              key_deserializer:
                                type: string
                              sasl_mechanism:
                                type: string
                              schema_registry:
                                type: string
                              security_protocol:
                                type: string
                              ssl_truststore:
                                type: string
                              ssl_truststore_password:
                                type: string
                              topic_name:
                                type: string
                              value_deserializer:
                                type: string
                            type: object
                          name:
                            type: string
                          s3:
                            properties:
                              bucket:
                                type: string
                              endpoint:
                                type: string
                              object_key:
                                type: string
                              region:
                                type: string
                            type: object
                          type:
                            format: int32
                            type: integer
                        type: object
                      credentialLocation:
                        description: 'CredentialLocation is used to obtain the credentials from the credential management system - ex: vault'
                        type: string
                      format:
                        description: Format represents data format (e.g. parquet) as received from catalog connectors
                        type: string
                    required:
                    - connection
                    - credentialLocation
                    - format
                    type: object
                  ifDetails:
                    description: IFdetails indicates the protocol and format expected by the data by the Data Scientist's application
                    properties:
                      dataformat:
                        description: DataFormatType defines data format type
                        enum:
                        - parquet
                        - table
                        - csv
                        - json
                        - avro
                        - binary
                        - arrow
                        type: string
                      protocol:
                        description: IFProtocol defines interface protocol for data transactions
                        enum:
                        - s3
                        - kafka
                        - jdbc-db2
                        - m4d-arrow-flight
                        type: string
                    required:
                    - protocol
                    type: object
                  recurrence:
                    description: Recurrence indicates how often the copy should take place or if streamed input is needed
                    type: string
                  residency:
                    description: 'Residency indicates the geographical origin of the data, especially important if there is an personal or other sensitive data. Assumes all data in the data set is from the same geography. TODO: In the future perhaps we need to handle situations where there are multiple residencies'
                    type: string
                  sensitivity:
                    description: 'Sensitivity indicates if there is any sensitive data in the data set. Since there may be different types of data with different levels of sensitivity, this is a list.  (ex: confidential, personal, special personal information) No values means there is no sensitive data.'
                    items:
                      description: 'DataSensitivity indicates the level of sensitivity of the data in the data set TODO: Values should be taken from a taxonomy'
                      type: string
                    type: array
                required:
                - externalStore
                - ifDetails
                - residency
                type: object
              type: array
            selector:
              description: Selector enables to connect the resource to the application Application labels should match the labels in the selector. If no selector, we assume ingest flow!
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                  type: object
              type: object
          required:
          - appInfo
          type: object
        status:
          description: M4DApplicationStatus defines the observed state of M4DApplication.
          properties:
            conditions:
              description: Conditions represent the possible error and failure conditions
              items:
                description: Condition describes the state of a M4DApplication at a certain point.
                properties:
                  message:
                    description: Message contains the details of the current condition
                    type: string
                  status:
                    description: 'Status of the condition: true or false'
                    type: string
                  type:
                    description: Type of the condition
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            dataAccessInstructions:
              description: DataAccessInstructions indicate how the data user or his application may access the data (i.e. virtual endpoint). Instructions are available upon successful orchestration. For data cataloged by the system, this will include the catalog ID
              type: string
            generated:
              description: Generated resource identifier
              properties:
                kind:
                  description: Kind of the resource (Blueprint, Plotter)
                  type: string
                name:
                  description: Name of the resource
                  type: string
                namespace:
                  description: Namespace of the resource
                  type: string
              required:
              - kind
              - name
              - namespace
              type: object
            observedGeneration:
              description: ObservedGeneration is taken from the M4DApplication metadata.  This is used to determine during reconcile whether reconcile was called because the desired state changed, or whether the Blueprint status changed.
              format: int64
              type: integer
            ready:
              description: Ready is true if a blueprint has been successfully orchestrated
              type: boolean
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
