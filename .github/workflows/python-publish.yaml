name: python-publish
on:
  workflow_dispatch:
    inputs:
      logging-version:
        required: true
        default: 'do-not-publish'
      vault-version:
        required: true
        default: 'do-not-publish'
      tls-version:
        required: true
        default: 'do-not-publish'
      transformation-version:
        required: true
        default: 'do-not-publish'
      pypi-repository-url:
        required: true
        default: 'https://upload.pypi.org/legacy/'
      pypi-user:
        required: true
        default: '__token__'
jobs:
  python-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4.5.0
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build logging package
      run: |
        if [ ${{ github.event.inputs.logging-version }} == "do-not-publish" ]
        then
          echo "do not publish logging library"
        else
          FYBRIK_PYTHON_LOGGING_VERSION=${{ github.event.inputs.logging-version }} python -m build ./python/logging --outdir ./dist
        fi
    - name: Build vault package
      run: |
        if [ ${{ github.event.inputs.vault-version }} == "do-not-publish" ]
        then
          echo "do not publish vault library"
        else
          FYBRIK_PYTHON_VAULT_VERSION=${{ github.event.inputs.vault-version }} python -m build ./python/vault --outdir ./dist
        fi
    - name: Build tls package
      run: |
        if [ ${{ github.event.inputs.tls-version }} == "do-not-publish" ]
        then
          echo "do not publish tls library"
        else
          FYBRIK_PYTHON_TLS_VERSION=${{ github.event.inputs.tls-version }} python -m build ./python/tls --outdir ./dist
        fi
    - name: Build transformation package
      run: |
        if [ ${{ github.event.inputs.transformation-version }} == "do-not-publish" ]
        then
          echo "do not publish transformation library"
        else
          FYBRIK_PYTHON_TRANSFORMATION_VERSION=${{ github.event.inputs.transformation-version }} python -m build ./python/transformation --outdir ./dist
        fi
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: ${{ github.event.inputs.pypi-user }}
        password: ${{ secrets.PYPI_API_TOKEN }}
        repository_url: ${{ github.event.inputs.pypi-repository-url }}
