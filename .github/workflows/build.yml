name: Build

on:
  push:
    branches:
      - github_actions_tests
#  pull_request:
#    branches:
#      - master

env:
  DOCKER_HOSTNAME: ghcr.io
  DOCKER_USERNAME: the-mesh-for-data
  ACTIVE_CI: travisci # This parameter defines which CI should push to the docker repository

jobs:
#  build:
#    name: Build all
#    runs-on: ubuntu-latest
#    env:
#      DOCKER_HOSTNAME: "localhost:5000"
#      DOCKER_NAMESPACE: m4d-system
#    steps:
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Install Go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.13
#      - uses: actions/checkout@v2
#      - run: echo $GOPATH
#      - run: echo $GOROOT
#      - name: Cache Maven packages
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.m2/repository
#            ~/go/pkg/mod
#            ${{ github.workspace }}/hack/tools/bin
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}-go-${{ hashFiles('**/go.sum') }}
#          restore-keys: ${{ runner.os }}-m2
#      - run: ls -lah ${{ github.workspace }}/hack/tools/bin || true
#      - name: Install tools
#        run: make install-tools
#      - name: Verify
#        run: make verify
#      - name: Test
#        run: make test
#      - name: Integration tests
#        run: make run-integration-tests
  verify:
    name: Verify
    runs-on: ubuntu-latest
    env:
      DOCKER_HOSTNAME: "localhost:5000"
      DOCKER_NAMESPACE: m4d-system
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13
    - uses: actions/checkout@v2
    - run: echo $GOPATH
    - run: echo $GOROOT
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
          ~/go/pkg/mod
          ${{ github.workspace }}/hack/tools/bin
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-go
    - run: ls -lah ${{ github.workspace }}/hack/tools/bin || true
    - name: Verify
      run: make verify
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    env:
      DOCKER_HOSTNAME: "localhost:5000"
      DOCKER_NAMESPACE: m4d-system
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13
    - uses: actions/checkout@v2
    - run: echo $GOPATH
    - run: echo $GOROOT
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
          ~/go/pkg/mod
          ${{ github.workspace }}/hack/tools/bin
        key: ${{ runner.os }}-ut-m2-${{ hashFiles('**/pom.xml') }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-ut-m2
    - run: ls -lah ${{ github.workspace }}/hack/tools/bin || true
    - name: Test
      run: make test
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    env:
      DOCKER_HOSTNAME: "localhost:5000"
      DOCKER_NAMESPACE: m4d-system
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13
    - uses: actions/checkout@v2
    - run: echo $GOPATH
    - run: echo $GOROOT
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
          ~/go/pkg/mod
          ${{ github.workspace }}/hack/tools/bin
        key: ${{ runner.os }}-it-m2-${{ hashFiles('**/pom.xml') }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-it-m2
    - run: ls -lah ${{ github.workspace }}/hack/tools/bin || true
    - run: du -sh ~/go/pkg/mod || true
    - run: du -sh ~/.m2/repository || true
    - name: Install tools
      run: make install-tools
    - name: Integration tests
      run: make run-integration-tests
    - name: Publish images
      if: ${{ github.event_name != 'pull_request' && env.ACTIVE_CI == 'gh_actions' }}
      run: sudo chmod o+x /etc/docker && make docker-retag-and-push-public && make helm-push-public
    - run: docker images
    - name: Save container
      run: docker save -o manager.tar ${{ env.DOCKER_HOSTNAME }}/${{ env.DOCKER_NAMESPACE }}/manager:latest
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: images
        path: manager.tar

  push_images:
    name: Push images
    runs-on: ubuntu-latest
    env:
      DOCKER_HOSTNAME: "localhost:5000"
      DOCKER_NAMESPACE: m4d-system
    needs: [verify, test, integration-tests]
    steps:
    - uses: actions/checkout@v2
    - name: Download images
      uses: actions/download-artifact@v2
      with:
        name: images
    - name: Load images
      run: docker load -i manager.tar
    - run: docker images
