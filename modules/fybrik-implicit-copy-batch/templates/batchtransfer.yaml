# Copyright 2020 IBM Corp.
# SPDX-License-Identifier: Apache-2.0

apiVersion: motion.fybrik.io/v1alpha1
kind: BatchTransfer
metadata:
  name: {{ include "fybrik-implicit-copy-batch.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "fybrik-implicit-copy-batch.name" . }}
    helm.sh/chart: {{ include "fybrik-implicit-copy-batch.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
{{ range $key, $val := .Values.labels }}
    {{ $key }}: {{ $val | quote }}
{{ end }}
spec:
  source:
    {{ if .Values.copy.source.connection.s3 }}
    s3:
      endpoint: {{ .Values.copy.source.connection.s3.endpoint | quote }}
      bucket: {{ .Values.copy.source.connection.s3.bucket | quote }}
      objectKey: {{ .Values.copy.source.connection.s3.object_key | quote }}
      dataFormat: {{ .Values.copy.source.format | quote }}
      {{ if .Values.copy.source.vault.read }}
      vault:
{{ toYaml .Values.copy.source.vault.read | indent 8 }}
      {{ end }}
    {{ end }}
    {{ if .Values.copy.source.connection.db2 }}
    database:
      table: {{ .Values.copy.source.connection.db2.table | quote }}
      db2URL: "jdbc:db2://{{ .Values.copy.source.connection.db2.url }}:{{ .Values.copy.source.connection.db2.port }}/{{ .Values.copy.source.connection.db2.database }}:sslConnection={{ .Values.copy.source.connection.db2.ssl }};"
      {{ if .Values.copy.source.vault.read }}
      vault:
{{ toYaml .Values.copy.source.vault.read | indent 8 }}
      {{ end }}
    {{ end }}
  destination:
    {{ if .Values.copy.destination.connection.s3 }}
    s3:
      endpoint: {{ .Values.copy.destination.connection.s3.endpoint | quote }}
      bucket: {{ .Values.copy.destination.connection.s3.bucket | quote }}
      objectKey: {{ .Values.copy.destination.connection.s3.object_key | quote }}
      dataFormat: {{ .Values.copy.destination.format | quote }}
      {{ if .Values.copy.destination.vault.write }}
      vault:
{{ toYaml .Values.copy.destination.vault.write | indent 8 }}
      {{ end }}
    {{ end }}
    {{ if .Values.copy.destination.connection.db2 }}
    database:
      table: {{ .Values.copy.destination.connection.db2.table | quote }}
      db2URL: "jdbc:db2://{{ .Values.copy.destination.connection.db2.url }}:{{ .Values.copy.destination.connection.db2.port }}/{{ .Values.copy.destination.connection.db2.database }}:sslConnection={{ .Values.copy.destination.connection.db2.ssl }};"
      {{ if .Values.copy.destination.vault.write }}
      vault:
{{ toYaml .Values.copy.destination.vault.write | indent 8 }}
      {{ end }}
    {{ end }}
  {{ if .Values.copy.transformations }}
  transformation:
  {{ range .Values.copy.transformations }}
  {{ if eq .name "RedactAction" }}
  - action: "RedactColumns"
    name: "redacting columns: {{ .RedactAction.columns }}"
    columns: {{ .RedactAction.columns }} 
    options:
      redactValue: "XXXXXX"
  {{ end }}
  {{ if eq .name "RemoveAction" }}
  - action: "RemoveColumns"
    name: "redacting columns: {{ .RemoveAction.columns }}"
    columns: {{ .RemoveAction.columns }}
  {{ end }}
  {{ end }}
  {{ end }}
  {{ if .Values.image }}
  image: {{ .Values.image | quote }}
  {{ end }}
  {{ if .Values.imagePullPolicy }}
  imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
  {{ end }}
  noFinalizer: {{ .Values.noFinalizer }}
  readDataType: {{ .Values.readDataType | quote}}
  writeDataType: {{ .Values.writeDataType | quote }}
  writeOperation: {{ .Values.writeOperation | quote }}
