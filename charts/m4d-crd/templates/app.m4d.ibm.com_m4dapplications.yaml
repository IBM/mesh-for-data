apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: m4dapplications.app.m4d.ibm.com
spec:
  group: app.m4d.ibm.com
  names:
    kind: M4DApplication
    listKind: M4DApplicationList
    plural: m4dapplications
    singular: m4dapplication
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: M4DApplication provides information about the application being
          used by a Data Scientist, the nature of the processing, and the data sets
          that the Data Scientist has chosen for processing by the application. The
          M4DApplication controller (aka pilot) obtains instructions regarding any
          governance related changes that must be performed on the data, identifies
          the modules capable of performing such changes, and finally generates the
          Blueprint which defines the secure runtime environment and all the components
          in it.  This runtime environment provides the Data Scientist's application
          with access to the data requested in a secure manner and without having
          to provide any credentials for the data sets.  The credentials are obtained
          automatically by the manager from an external credential management system,
          which may or may not be part of a data catalog.
        type: object
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: M4DApplicationSpec defines the desired state of M4DApplication.
            type: object
            required:
            - appInfo
            - data
            properties:
              appInfo:
                description: AppInfo contains information describing the reasons and
                  geography of the processing that will be done by the Data Scientist's
                  application.
                type: object
                required:
                - role
                properties:
                  purpose:
                    description: Purpose indicates the reason for the processing and
                      the use of the data by the Data Scientist's application.
                    type: string
                  role:
                    description: Role indicates the position held or role filled by
                      the Data Scientist as it relates to the processing of the data
                      he has chosen.
                    type: string
              data:
                description: Data contains the identifiers of the data to be used
                  by the Data Scientist's application, and the protocol used to access
                  it and the format expected.
                type: array
                minItems: 1
                items:
                  description: DataContext indicates data set chosen by the Data Scientist
                    to be used by his application, and includes information about
                    the data format and technologies used by the application to access
                    the data.
                  type: object
                  required:
                  - dataSetID
                  - requirements
                  properties:
                    catalogService:
                      description: CatalogService represents the catalog service for
                        accessing the requested dataset. If not specified, the enterprise
                        catalog service will be used.
                      type: string
                    dataSetID:
                      description: DataSetID is a unique identifier of the dataset
                        chosen from the data catalog for processing by the data user
                        application.
                      type: string
                      minLength: 1
                    requirements:
                      description: Requirements from the system
                      type: object
                      required:
                      - interface
                      properties:
                        copy:
                          description: CopyRequrements include the requirements for
                            copying the data
                          type: object
                          properties:
                            catalog:
                              description: Catalog indicates that the data asset must
                                be cataloged.
                              type: object
                              properties:
                                catalogID:
                                  description: CatalogID specifies the catalog where
                                    the data will be cataloged.
                                  type: string
                                service:
                                  description: CatalogService specifies the datacatalog
                                    service that will be used for catalogging the
                                    data into.
                                  type: string
                            required:
                              description: Required indicates that the data must be
                                copied.
                              type: boolean
                        interface:
                          description: Interface indicates the protocol and format
                            expected by the data user
                          type: object
                          required:
                          - protocol
                          properties:
                            dataformat:
                              description: DataFormatType defines data format type
                              type: string
                              enum:
                              - parquet
                              - table
                              - csv
                              - json
                              - avro
                              - binary
                              - arrow
                            protocol:
                              description: IFProtocol defines interface protocol for
                                data transactions
                              type: string
                              enum:
                              - s3
                              - kafka
                              - jdbc-db2
                              - m4d-arrow-flight
              selector:
                description: Selector enables to connect the resource to the application
                  Application labels should match the labels in the selector. For
                  some flows the selector may not be used.
                type: object
                required:
                - workloadSelector
                properties:
                  clusterName:
                    description: Cluster name
                    type: string
                  workloadSelector:
                    description: WorkloadSelector enables to connect the resource
                      to the application Application labels should match the labels
                      in the selector.
                    type: object
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        type: array
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          type: object
                          required:
                          - key
                          - operator
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              type: array
                              items:
                                type: string
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                        additionalProperties:
                          type: string
          status:
            description: M4DApplicationStatus defines the observed state of M4DApplication.
            type: object
            properties:
              catalogedAssets:
                description: CatalogedAssets provide the new asset identifiers after
                  being registered in the enterprise catalog It maps the original
                  asset id to the cataloged asset id.
                type: object
                additionalProperties:
                  type: string
              conditions:
                description: Conditions represent the possible error and failure conditions
                type: array
                items:
                  description: Condition describes the state of a M4DApplication at
                    a certain point.
                  type: object
                  required:
                  - status
                  - type
                  properties:
                    message:
                      description: Message contains the details of the current condition
                      type: string
                    status:
                      description: 'Status of the condition: true or false'
                      type: string
                    type:
                      description: Type of the condition
                      type: string
              dataAccessInstructions:
                description: DataAccessInstructions indicate how the data user or
                  his application may access the data. Instructions are available
                  upon successful orchestration.
                type: string
              generated:
                description: Generated resource identifier
                type: object
                required:
                - kind
                - name
                - namespace
                properties:
                  kind:
                    description: Kind of the resource (Blueprint, Plotter)
                    type: string
                  name:
                    description: Name of the resource
                    type: string
                  namespace:
                    description: Namespace of the resource
                    type: string
              observedGeneration:
                description: ObservedGeneration is taken from the M4DApplication metadata.  This
                  is used to determine during reconcile whether reconcile was called
                  because the desired state changed, or whether the Blueprint status
                  changed.
                type: integer
                format: int64
              provisionedStorage:
                description: ProvisionedStorage maps a dataset (identified by DataSetID)
                  to the new provisioned bucket. It allows M4DApplication controller
                  to manage buckets in case the spec has been modified, an error has
                  occurred, or a delete event has been received. ProvisionedStorage
                  has the information required to register the dataset once the owned
                  plotter resource is ready
                type: object
                additionalProperties:
                  description: DatasetDetails contain dataset connection and metadata
                    required to register this dataset in the enterprise catalog
                  type: object
                  properties:
                    datasetRef:
                      description: Reference to a Dataset resource containing the
                        request to provision storage
                      type: string
                    details:
                      description: Dataset information
                      type: object
                    secretRef:
                      description: Reference to a secret where the credentials are
                        stored
                      type: string
              ready:
                description: Ready is true if a blueprint has been successfully orchestrated
                type: boolean
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
